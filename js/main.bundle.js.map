{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://kekstagram/./source/js/util.js","webpack://kekstagram/./source/js/big-photo.js","webpack://kekstagram/./source/js/preview.js","webpack://kekstagram/./source/js/effects.js","webpack://kekstagram/./source/js/validate.js","webpack://kekstagram/./source/js/modal.js","webpack://kekstagram/./source/js/fetch.js","webpack://kekstagram/./source/js/editor.js","webpack://kekstagram/./source/js/scale.js","webpack://kekstagram/./source/js/filters.js","webpack://kekstagram/./source/js/main.js"],"sourcesContent":["/* global _:readonly */\nconst getRandomInt = _.random;\nconst getShuffleArr = _.shuffle;\nconst CLASS_HIDDEN = 'hidden';\nconst CLASS_MODAL_OPEN ='modal-open';\nconst CLOSE = 'Закрыть';\nconst body = document.body;\n\nconst METHODS = {\n  GET: 'GET',\n  POST: 'POST',\n};\n\nconst MODALS = {\n  ERROR: 'error',\n  SUCCESS: 'success',\n};\n\nconst Keys = {\n  ESC: 'Esc',\n  ESCAPE: 'Escape',\n};\n\nconst isEscapeKey = (key) => {\n  return key === Keys.ESC || key === Keys.ESCAPE;\n};\n\nconst stringCount = (string, count) => {\n  string = string.trim();\n\n  if (typeof string !== 'string' || typeof count !== 'number') {\n    throw new Error('Аргументы должны быть строкой и числом');\n  }\n\n  if (count <= 0) {\n    throw new Error('Число count не может быть отрицательным или равным нулю');\n  }\n\n  if (string === undefined || count === undefined) {\n    throw new Error('Не переданы обязательные аргументы');\n  }\n\n  return string.length <= count;\n};\n\nconst getRandomElemArr = (arr) => {\n  return arr[getRandomInt(0, arr.length -1)];\n};\n\nexport { getRandomInt, stringCount, getRandomElemArr, getShuffleArr, CLASS_HIDDEN, CLASS_MODAL_OPEN, body, isEscapeKey, CLOSE, METHODS, MODALS };\n","import { isEscapeKey, CLASS_HIDDEN, CLASS_MODAL_OPEN, body } from './util.js';\n\nconst STEP_PER_PORTION = 5;\n\nconst bigPicture = document.querySelector('.big-picture');\nconst commentTemplate = document.querySelector('#comment').content.querySelector('.social__comment');\nconst closeModalButton = bigPicture.querySelector('.big-picture__cancel');\n\nconst commentList = bigPicture.querySelector('.social__comments');\nconst loadMoreButton = bigPicture.querySelector('.comments-loader');\nconst bigPhotoImg = bigPicture.querySelector('.big-picture__img > img');\nconst likesCount = bigPicture.querySelector('.likes-count');\nconst commentsCount = bigPicture.querySelector('.comments-count');\nconst shownCommentsCount = bigPicture.querySelector('.social__shown-comments-count');\nconst socialCaption = bigPicture.querySelector('.social__caption');\n\nconst createComment = (comment) => {\n  const newComment = commentTemplate.cloneNode(true);\n\n  newComment.querySelector('.social__picture').src = comment.avatar;\n  newComment.querySelector('.social__picture').alt = comment.name;\n  newComment.querySelector('.social__text').textContent = comment.message;\n\n  return newComment;\n};\n\nconst renderBigPhoto = (photo) => {\n  const comments = photo.comments;\n  let shownComments = 0;\n\n  body.classList.add(CLASS_MODAL_OPEN);\n\n  bigPhotoImg.src = photo.url;\n  likesCount.textContent = photo.likes;\n  commentsCount.textContent = comments.length;\n  socialCaption.textContent = photo.description;\n\n  commentList.replaceChildren();\n  loadMoreButton.classList.remove(CLASS_HIDDEN);\n\n  const renderCommentsPortion = () => {\n    const portion = comments.slice(shownComments, shownComments + STEP_PER_PORTION);\n    const fragment = document.createDocumentFragment();\n\n    portion.forEach((comment) => {\n      fragment.appendChild(createComment(comment));\n    });\n\n    commentList.appendChild(fragment);\n    shownComments += portion.length;\n    shownCommentsCount.textContent = shownComments;\n\n    if (shownComments >= comments.length) {\n      loadMoreButton.classList.add(CLASS_HIDDEN);\n    }\n  };\n\n  const onLoadMoreButtonClick = () => {\n    renderCommentsPortion();\n  };\n\n  const closeBigPhoto = () => {\n    bigPicture.classList.add(CLASS_HIDDEN);\n    body.classList.remove(CLASS_MODAL_OPEN);\n    document.removeEventListener('keydown', onDocumentKeydown);\n    closeModalButton.removeEventListener('click', closeBigPhoto);\n    loadMoreButton.removeEventListener('click', onLoadMoreButtonClick);\n  };\n\n  function onDocumentKeydown(evt) {\n    if (isEscapeKey(evt.key)) {\n      closeBigPhoto();\n    }\n  }\n\n  document.addEventListener('keydown', onDocumentKeydown);\n  closeModalButton.addEventListener('click', closeBigPhoto);\n  loadMoreButton.addEventListener('click', onLoadMoreButtonClick);\n\n  renderCommentsPortion();\n  bigPicture.classList.remove(CLASS_HIDDEN);\n};\n\nexport { renderBigPhoto };\n","import { renderBigPhoto } from './big-photo.js';\n\nconst previewTemplate = document.querySelector('#picture').content.querySelector('.picture');\nconst photoList = document.querySelector('.pictures');\n\nconst createPreview = (photo) => {\n  const preview = previewTemplate.cloneNode(true);\n\n  preview.querySelector('.picture__img').src = photo.url;\n  preview.querySelector('.picture__likes').textContent = photo.likes;\n  preview.querySelector('.picture__comments').textContent = photo.comments.length;\n\n  const onPreviewClick = (evt) => {\n    evt.preventDefault();\n\n    renderBigPhoto(photo);\n  };\n\n  preview.addEventListener('click', onPreviewClick);\n\n  return preview;\n};\n\nconst renderPreview = (photos) => {\n  const fragment = document.createDocumentFragment();\n\n  for (let i = 0; i < photos.length; i++) {\n    fragment.appendChild(createPreview(photos[i]));\n  }\n\n  photoList.appendChild(fragment);\n};\n\nexport { renderPreview };\n","const CLASS_VISUALLY_HIDDEN = 'visually-hidden';\n// объект с настройками слайдера\nconst sliderOptions = {\n  'chrome': {\n    start: 1,\n    step: 0.1,\n    range: {\n      'min': 0,\n      'max': 1,\n    },\n  },\n  'sepia': {\n    start: 1,\n    step: 0.1,\n    range: {\n      'min': 0,\n      'max': 1,\n    },\n  },\n  'marvin': {\n    start: 100,\n    step: 1,\n    range: {\n      'min': 0,\n      'max': 100,\n    },\n  },\n  'phobos': {\n    start: 3,\n    step: 0.1,\n    range: {\n      'min': 0,\n      'max': 3,\n    },\n  },\n  'heat': {\n    start: 3,\n    step: 0.1,\n    range: {\n      'min': 0,\n      'max': 3,\n    },\n  },\n};\n\nconst effects = (effectsControls, effectValue, preview, slider) => {\n\n  const settingEffect = (value) => {\n    slider.classList.remove(CLASS_VISUALLY_HIDDEN);\n    preview.classList = '';\n    preview.classList.add(`effects__preview--${value}`);\n    slider.noUiSlider.updateOptions(sliderOptions[value]);\n    effectValue.value = slider.noUiSlider.get();\n  };\n\n  const onEffectChange = (evt) => {\n    const value = evt.target.value;\n    switch (value) {\n      case 'none':\n        slider.classList.add(CLASS_VISUALLY_HIDDEN);\n        preview.classList = '';\n        preview.classList.add(`effects__preview--${value}`);\n        preview.style.filter = 'none';\n        break;\n      case 'chrome':\n        settingEffect(value);\n        break;\n      case 'sepia':\n        settingEffect(value);\n        break;\n      case 'marvin':\n        settingEffect(value);\n        break;\n      case 'phobos':\n        settingEffect(value);\n        break;\n      case 'heat':\n        settingEffect(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // обработчик контролов эффектов\n  effectsControls.addEventListener('change', onEffectChange);\n\n  // возвращаем объект с методом для удаления обработчика\n  return {\n    removeEffectsHandler: () => {\n      effectsControls.removeEventListener('change', onEffectChange);\n    },\n  };\n};\n\nconst changeLevelEffect = (value, typeEffect, preview) => {\n  switch (typeEffect) {\n    case 'none':\n      return;\n    case 'chrome':\n      preview.style.filter = `grayscale(${value})`;\n      break;\n    case 'sepia':\n      preview.style.filter = `sepia(${value})`;\n      break;\n    case 'marvin':\n      preview.style.filter = `invert(${value}%)`;\n      break;\n    case 'phobos':\n      preview.style.filter = `blur(${value}px)`;\n      break;\n    case 'heat':\n      preview.style.filter = `brightness(${value})`;\n      break;\n    default:\n      break;\n  }\n};\n\nexport { effects, changeLevelEffect };\n","const HASHTAG_MAX_LENGTH = 20;\nconst HASHTAG_MAX_COUNT = 5;\nconst COMMENT_MAX_LENGTH = 140;\n// форма отправки нового изибражения пользователя\nconst form = document.querySelector('.img-upload__form');\n\n// инпут хэш-тегов\nconst hashtagInput = form.querySelector('.text__hashtags');\n// инпут комментария\nconst commentInput = form.querySelector('.text__description');\n\n// валидация хэш-тегов\nconst validateHashtags = () => {\n  // получаем значение инпута хэш-тегов\n  const hashtagsValue = hashtagInput.value.trim();\n\n  // сбрасываем ошибку\n  hashtagInput.setCustomValidity('');\n\n  // хэш-теги не обязательны\n  if (!hashtagsValue) {\n    return;\n  }\n\n  // получаем массив хэш-тегов\n  const hashtags = hashtagsValue.split(/\\s+/).filter(tag => tag !== '');\n  // уникальные хэш-теги\n  const uniqueHashtag = new Set();\n\n  // валидируем массив хэш-тегов\n  hashtags.forEach(hashtag => {\n    // хэш-тег начинается с символа # (решётка)\n    if (!hashtag.startsWith('#')) {\n      hashtagInput.setCustomValidity('хэш-тег начинается с символа # (решётка)');\n      return;\n    }\n    // хеш-тег не может состоять только из одной решётки\n    if (hashtag.length === 1) {\n      hashtagInput.setCustomValidity('хеш-тег не может состоять только из одной решётки');\n      return;\n    }\n    // допустимые символы\n    const validChars = /^#[a-zA-zа-яА-ЯёЁ0-9]+$/;\n    if (!validChars.test(hashtag)) {\n      hashtagInput.setCustomValidity('хеш-тег содержит недопустимые символы');\n      return;\n    }\n    // максимальная длинна\n    if (hashtag.length > HASHTAG_MAX_LENGTH) {\n      hashtagInput.setCustomValidity('максимальная длина одного хэш-тега 20 символов, включая решётку');\n      return;\n    }\n    // повторяющиеся хэш-теги\n    const lowerCaseHashtag = hashtag.toLowerCase();\n    if (uniqueHashtag.has(lowerCaseHashtag)) {\n      hashtagInput.setCustomValidity('один и тот же хэш-тег не может быть использован дважды');\n      return;\n    } else {\n      uniqueHashtag.add(lowerCaseHashtag);\n    }\n\n  });\n\n  // Проверка на максимальное количество хэш-тегов\n  if (hashtags.length > HASHTAG_MAX_COUNT) {\n    hashtagInput.setCustomValidity('нельзя указать больше пяти хэш-тегов');\n  }\n\n  // запускаем проверку валидности\n  hashtagInput.reportValidity();\n};\n\n// валидация комментария\nconst validateComment = () => {\n  // получаем значение инпута комментария\n  const commentValue = commentInput.value.trim();\n\n  // сбрасываем ошибку\n  commentInput.setCustomValidity('');\n\n  // комментария не обязателен\n  if (!commentValue) {\n    return;\n  }\n\n  // длинна комментария не более 140 символов\n  if (commentValue.length > COMMENT_MAX_LENGTH) {\n    commentInput.setCustomValidity('максимальная длина одного комментария 140 символов');\n  }\n\n  // запускаем проверку валидности\n  commentInput.reportValidity();\n};\n\n// колбек обработчика инпута хэш-тегов\nconst onHashtagInput = () => {\n  validateHashtags();\n};\n\n// колбек обработчика инпута комментария\nconst onCommentInput = () => {\n  validateComment();\n};\n\n// добавляем обработчики инпутов\nconst addValidationHandlers = () => {\n  // обработчик инпута хэш-тогов\n  hashtagInput.addEventListener('input', onHashtagInput);\n  // обработчик инпута комментария\n  commentInput.addEventListener('input', onCommentInput);\n};\n\n// снимаем обработчики с инпутов\nconst removeValidationHandlers = () => {\n  hashtagInput.removeEventListener('input', onHashtagInput);\n  commentInput.removeEventListener('input', onCommentInput);\n};\n\n\n\nexport { addValidationHandlers, removeValidationHandlers };\n","import { body, isEscapeKey } from './util.js';\n\nconst showModal = (modalType, header, btnText) => {\n  const modalTemplate = document.querySelector(`#${modalType}`).content.querySelector(`.${modalType}`);\n  const modal = modalTemplate.cloneNode(true);\n  const modalBtn = modal.querySelector(`.${modalType}__button`);\n  const modalFragment = document.createDocumentFragment();\n\n  const closeModal = () => {\n    modal.remove();\n    document.removeEventListener('keydown', onDocumentKeydown);\n  };\n\n  const onDocumentKeydown = (evt) => {\n    if (isEscapeKey(evt.key)) {\n      closeModal();\n    }\n  };\n\n  if (header) {\n    modal.querySelector(`.${modalType}__title`).textContent = header;\n  }\n\n  if (btnText) {\n    modalBtn.textContent = btnText;\n  }\n\n  modalBtn.addEventListener('click', closeModal);\n  document.addEventListener('keydown', onDocumentKeydown);\n  modal.addEventListener('click', (evt) => {\n    if(evt.target === modal) {\n      closeModal();\n    }\n  });\n\n  modalFragment.appendChild(modal);\n  body.appendChild(modalFragment);\n};\n\nexport { showModal };\n","const Urls = {\n  GET: 'https://23.javascript.htmlacademy.pro/kekstagram/data',\n  POST: 'https://23.javascript.htmlacademy.pro/kekstagram',\n};\n\nconst checkStatus = (response) => {\n  if (response.ok) {\n    return response;\n  }\n\n  const { statusText, status } = response;\n  throw new Error(`${status} — ${statusText}`);\n};\n\nconst request = (onSuccess, onError, method, body) => {\n  fetch(Urls[method], {\n    method,\n    body,\n  })\n    .then(checkStatus)\n    .then((response) => response.json())\n    .then((photos) => onSuccess(photos))\n    .catch((err) => onError(err));\n};\n\nexport { request };\n","import { CLASS_HIDDEN, CLASS_MODAL_OPEN, body, isEscapeKey, MODALS, METHODS } from './util.js';\nimport { scale } from './scale.js';\nimport { effects, changeLevelEffect } from './effects.js';\nimport { addValidationHandlers, removeValidationHandlers } from './validate.js';\nimport { showModal } from './modal.js';\nimport { request } from './fetch.js';\n\nconst FILE_TYPES = ['jpg', 'jpeg', 'png'];\n// форма редактирования изображения\nconst form = document.querySelector('.img-upload__form');\nconst uploadOverlay = form.querySelector('.img-upload__overlay');\n// контрол загрузки фото\nconst upload = form.querySelector('#upload-file');\n// превью изображения\nconst preview = uploadOverlay.querySelector('.img-upload__preview img');\n// контролы зума\nconst scaleControls = uploadOverlay.querySelector('.img-upload__scale');\nconst scaleValue = uploadOverlay.querySelector('.scale__control--value');\n\n// контролы эффектов\nconst effectsControls = uploadOverlay.querySelector('.img-upload__effects');\nconst effectValue = uploadOverlay.querySelector('.effect-level__value');\n\n// колбек обработчика контрола загрузки фото\nconst onUploadChange = () => {\n  const photo = upload.files[0];\n  const photoName = photo.name.toLowerCase();\n  const previews = uploadOverlay.querySelectorAll('.effects__preview');\n\n  const matches = FILE_TYPES.some((it) => {\n    return photoName.endsWith(it);\n  });\n\n  if (matches) {\n    const reader = new FileReader();\n\n    reader.addEventListener('load', () => {\n      preview.src = reader.result;\n      previews.forEach((preview) => {\n        preview.style.backgroundImage = `url(${reader.result})`;\n      });\n    });\n\n    reader.readAsDataURL(photo);\n  }\n\n  // слайдер эффектов\n  const slider = uploadOverlay.querySelector('.img-upload__effect-level');\n  slider.classList.add('visually-hidden');\n  // eslint-disable-next-line no-undef\n  noUiSlider.create(slider, {\n    start: 1,\n    step: 0.1,\n    connect: 'lower',\n    range: {\n      'min': 0,\n      'max': 1,\n    },\n    format: {\n      to: function (value) {\n        return value;\n      },\n      from: function (value) {\n        return parseFloat(value);\n      },\n    },\n  });\n  // колбек обработчика слайдера\n  const onSliderChange = (values, handle) => {\n    const value = values[handle];\n    effectValue.value = value;\n    const typeEffect = preview.classList.value.replace('effects__preview--', '');\n\n    changeLevelEffect(value, typeEffect, preview);\n  }\n\n  // обработчик слайдера\n  slider.noUiSlider.on('update', onSliderChange);\n\n  // кнопка закрытия формы\n  const closeUploadOverlay = uploadOverlay.querySelector('#upload-cancel');\n  // колбек обработчика кнопки закрытия формы\n  const onCloseButtonClick = () => {\n    resetSetings();\n    uploadOverlay.classList.add(CLASS_HIDDEN);\n    body.classList.remove(CLASS_MODAL_OPEN);\n    slider.noUiSlider.destroy();\n    closeUploadOverlay.removeEventListener('click', onCloseButtonClick);\n    document.removeEventListener('keydown', onDocumentKeydown);\n    scaleRemoveListener.removeScaleHandler();\n    effectsRemoveListener.removeEffectsHandler();\n    removeValidationHandlers();\n  }\n  // обработчик кнопки закрытия формы\n  closeUploadOverlay.addEventListener('click', onCloseButtonClick);\n  // колбек обработчика Esc\n  const onDocumentKeydown = (evt) => {\n    const inputHashtags = uploadOverlay.querySelector('.text__hashtags');\n    const inputComment = uploadOverlay.querySelector('.text__description');\n    if (inputHashtags !== document.activeElement && inputComment !== document.activeElement) {\n      if (isEscapeKey(evt.key)) {\n        onCloseButtonClick();\n      }\n    }\n  };\n  // обработчки закрытия формы по нажатию клавиши Esc\n  document.addEventListener('keydown', onDocumentKeydown);\n\n  // зум изображения\n  const scaleRemoveListener = scale(scaleControls, scaleValue, preview);\n\n  // применение эффектов\n  const effectsRemoveListener = effects(effectsControls, effectValue, preview, slider);\n\n  // обработчики валидации\n  addValidationHandlers();\n\n  // отправляем данные из формы\n  const onError = () => {\n    showModal(MODALS.ERROR);\n  };\n\n  const onSuccess = () => {\n    showModal(MODALS.SUCCESS);\n  };\n\n  const onSubmitForm = (evt) => {\n    evt.preventDefault();\n\n    const body = new FormData(form);\n\n    request(onSuccess, onError, METHODS.POST, body);\n    form.reset();\n    onCloseButtonClick();\n    form.removeEventListener('submit', onSubmitForm);\n  };\n\n  // обработчик отправки формы\n  form.addEventListener('submit', onSubmitForm);\n\n  // показываем форму и отключаем скролл у body\n  uploadOverlay.classList.remove(CLASS_HIDDEN);\n  body.classList.add(CLASS_MODAL_OPEN);\n\n};\n\n// сброс настроек\nconst resetSetings = () => {\n  preview.style.transform = 'scale(1)';\n  preview.style.filter = '';\n  preview.classList = '';\n  scaleValue.value = '100%';\n  upload.value = '';\n}\n\n// обработчик контрола\nupload.addEventListener('change', onUploadChange);\n","// зум\nconst scale = (scaleControls, scaleValue, img) => {\n\n  // колбек обработчика зума\n  const onScaleChange = (evt) => {\n    if (evt.target.classList.contains('scale__control--smaller')) {\n      if (scaleValue.value !== '25%') {\n        scaleValue.value = (parseFloat(scaleValue.value) - 25) + '%' ;\n        img.style.transform = `scale(${(parseFloat(scaleValue.value)) / 100})`;\n      }\n    } else if (evt.target.classList.contains('scale__control--bigger')) {\n      if (scaleValue.value !== '100%') {\n        scaleValue.value = (parseFloat(scaleValue.value) + 25) + '%' ;\n        img.style.transform = `scale(${(parseFloat(scaleValue.value)) / 100})`;\n      }\n    }\n  };\n  // обработчик зума\n  scaleControls.addEventListener('click', onScaleChange);\n\n  // возвращаем объект с методом для удаления обработчика\n  return {\n    removeScaleHandler: () => {\n      scaleControls.removeEventListener('click', onScaleChange);\n    },\n  };\n};\n\nexport { scale };\n","/* global _:readonly */\nimport { renderPreview } from './preview.js';\nimport { getShuffleArr } from './util.js';\n\nconst CLASS_INACTIVE = 'img-filters--inactive';\nconst CLASS_ACTIVE_BTN = 'img-filters__button--active';\nconst RANDOM_COUNT = 10;\nconst DELAY = 500;\n\n\nconst filters = document.querySelector('.img-filters');\nconst formFilters = filters.querySelector('.img-filters__form');\n\nconst filtersPhotos = {\n  'filter-random': (photos) => {\n    renderPreview(getShuffleArr(photos).slice(0, RANDOM_COUNT));\n  },\n  'filter-discussed': (photos) => {\n    renderPreview(photos.slice().sort((a, b) => {\n      return b.comments.length - a.comments.length;\n    }));\n  },\n  'filter-default': (photos) => {\n    renderPreview(photos);\n  },\n};\n\nconst removePictures = () => {\n  const pictures = document.querySelectorAll('.picture');\n\n  if (pictures) {\n    pictures.forEach((picture) => picture.remove());\n  }\n\n};\n\nconst addClassActiveBtn = (btn) => {\n  btn.classList.add(CLASS_ACTIVE_BTN);\n};\n\nconst removeClassActiveBtn = () => {\n  const buttons = formFilters.children;\n\n  for (const btn of buttons) {\n    btn.classList.remove(CLASS_ACTIVE_BTN);\n  }\n};\n\nconst filtersPictures = (photos) => {\n\n  filters.classList.remove(CLASS_INACTIVE);\n\n  const debouncedRender = _.debounce((filterId, photos) => {\n    removePictures();\n    filtersPhotos[filterId](photos);\n  }, DELAY);\n\n  const onClickButton = (evt) => {\n    const activeBtn = evt.target;\n\n    if (activeBtn.classList.contains('img-filters__button')) {\n      removeClassActiveBtn();\n      addClassActiveBtn(activeBtn);\n      debouncedRender(activeBtn.id, photos);\n    }\n\n  };\n\n  formFilters.addEventListener('click', onClickButton);\n\n};\n\nexport { filtersPictures };\n","import { renderPreview } from './preview.js';\nimport './editor.js';\nimport { request } from './fetch.js';\nimport { showModal } from './modal.js';\nimport { CLOSE, METHODS, MODALS } from './util.js';\nimport { filtersPictures } from './filters.js';\n\nconst onSuccess = (photos) => {\n  renderPreview(photos);\n  filtersPictures(photos);\n};\n\nconst onError = (err) => {\n  showModal(MODALS.ERROR, err, CLOSE);\n};\n\nrequest(onSuccess, onError, METHODS.GET);\n"],"names":["_","random","getShuffleArr","shuffle","CLASS_HIDDEN","CLASS_MODAL_OPEN","body","document","MODALS","isEscapeKey","key","bigPicture","querySelector","commentTemplate","content","closeModalButton","commentList","loadMoreButton","bigPhotoImg","likesCount","commentsCount","shownCommentsCount","socialCaption","previewTemplate","photoList","createPreview","photo","preview","cloneNode","src","url","textContent","likes","comments","length","addEventListener","evt","preventDefault","shownComments","classList","add","description","replaceChildren","remove","renderCommentsPortion","portion","slice","fragment","createDocumentFragment","forEach","comment","appendChild","newComment","avatar","alt","name","message","createComment","onLoadMoreButtonClick","closeBigPhoto","removeEventListener","onDocumentKeydown","renderBigPhoto","renderPreview","photos","i","CLASS_VISUALLY_HIDDEN","sliderOptions","start","step","range","hashtagInput","commentInput","onHashtagInput","hashtagsValue","value","trim","setCustomValidity","hashtags","split","filter","tag","uniqueHashtag","Set","hashtag","startsWith","test","lowerCaseHashtag","toLowerCase","has","reportValidity","validateHashtags","onCommentInput","commentValue","validateComment","showModal","modalType","header","btnText","modal","modalBtn","modalFragment","closeModal","target","Urls","GET","POST","checkStatus","response","ok","statusText","status","Error","request","onSuccess","onError","method","fetch","then","json","catch","err","FILE_TYPES","uploadOverlay","upload","scaleControls","scaleValue","effectsControls","effectValue","files","photoName","previews","querySelectorAll","some","it","endsWith","reader","FileReader","result","style","backgroundImage","readAsDataURL","slider","noUiSlider","create","connect","format","to","from","parseFloat","on","values","handle","typeEffect","changeLevelEffect","replace","closeUploadOverlay","onCloseButtonClick","transform","destroy","scaleRemoveListener","removeScaleHandler","effectsRemoveListener","removeEffectsHandler","inputHashtags","inputComment","activeElement","img","onScaleChange","contains","scale","onEffectChange","updateOptions","get","settingEffect","effects","onSubmitForm","FormData","reset","CLASS_ACTIVE_BTN","filters","formFilters","filtersPhotos","sort","a","b","debouncedRender","debounce","filterId","pictures","picture","removePictures","activeBtn","buttons","children","btn","removeClassActiveBtn","id","filtersPictures"],"sourceRoot":""}